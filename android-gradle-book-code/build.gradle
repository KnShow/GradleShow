task hello{
	doLast{
		println'Hello World!'
	}
}

//字符串
task printStringClass <<{
	def str1 = '单引号'
	def str2 = "双引号"
	println "单引号的字符串类型: "+str1.getClass().name
	println "双引号的字符串类型: "+str2.getClass().name
}

task printStringvar <<{
	def name = "张三"
	println '单引号的变量计算: ${name}'
	println "双引号的变量计算: ${name}"
}
// 集合 List|Map
task printList <<{
	def numList = [1,2,3,4,5,6];
	println numList.getClass().name
	println numList[1]
	println numList[-1]
	println numList[-2]
	println numList[1..3]
	
	numList.each({
		println it
	})
	
	
	numList.each(){
		println it
	}
	
	numList.each{
		println it
	}
}

task printMap <<{
	def map = ['Java':18,'Android':10]
	println map.getClass().name
	
	println map['Java']
	println map.Android
	
	map.each{
		println "key: ${it.key},value: ${it.value}"
	}
}

//方法
task invokeMethod <<{
	method(1,2)
	method 1,2
}

def method(int a,int b){
	println a+b
}

task printMethodReturn{
	int add1 = method2 1,2
	int add2 = method2 2,1
	println "add1: ${add1} add2: ${add2}"
}

def method2(int a,int b){
	if(a>b)
		a
	else
		b
}

//JavaBean
task helloJavaBean{
	Person p = new Person()
	println p.name
	p.name = "张三"
	println p.name
	println p.age
}
class Person{
	private String name
	public int getAge(){
		12
	}
}

//闭包
task helloClosure{
	//customEach{
		//println it
	//}
	//多个参数
	eachMap{k,v->
		println "$k  $v"
	}
}

def customEach(closure){
	//模拟一个有10个元素的迭代
	for(int i  in 1..10){
		closure(i)
	}
}

def eachMap(closure){
	def map1 = ["name":"张三","age":18]
	closure(map1.name,map1.age)
}

//闭包委托
task helloDelegate{
	new Delegate().test{
		println "thisObject: ${thisObject.getClass()}"
		println "owner: ${owner.getClass()}"
		println "delegate: ${delegate.getClass()}"
		
		method1()
		it.method1()
	}
}
def method1(){
	println "Context this:${this.getClass()} in root"
	println "method1 in root"
}

class Delegate{
	def method1(){
		println "Delegate this:${this.getClass()} in Delegate"
		println "method1 in Delegate"
	}
	
	def test(Closure<Delegate> closure){
		closure(this)
	}
}




